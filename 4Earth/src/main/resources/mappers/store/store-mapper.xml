<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.kh.earth.store.model.dao.StoreMapper">
	<sql id="selectProductSql">
		SELECT PRO_NO,
			   PRO_NAME,
			   PRO_PRICE, 
			   PRO_DATE, 
			   PRO_MODIFY_DATE, 
			   PRO_VOL, 
			   PRO_IMG, 
			   PRO_INFO, 
			   PRO_STAT,
			   PRO_CAT, 
			   PRO_SOLD, 
			   PRO_MFG, 
			   PRO_RATING
	</sql>

	<resultMap type="Product" id="ProductListResultMap">
		<id property="proNo" column="PRO_NO"/>
		<result property="proName" column="PRO_NAME"/>
		<result property="proPrice" column="PRO_PRICE"/>
		<result property="proDate" column="PRO_DATE"/>
		<result property="proModifyDate" column="PRO_MODIFY_DATE"/>
		<result property="proVol" column="PRO_VOL"/>
		<result property="proImg" column="PRO_IMG"/>
		<result property="proInfo" column="PRO_INFO"/>
		<result property="proStat" column="PRO_STAT"/>
		<result property="proCat" column="PRO_CAT"/>
		<result property="proSold" column="PRO_SOLD"/>
		<result property="proMfg" column="PRO_MFG"/>
		<result property="proRating" column="PRO_RATING"/>
	</resultMap>
	
	<resultMap type="ProductOption" id="ProductOptionResultMap">
		<id property="proNo" column="O_PRO_NO"/>
		<result property="optNo" column="O_O_NO"/>
		<result property="optName" column="O_O_NAME"/>
	</resultMap>
	
	<resultMap type="Product" id="ProductResultMap">
		<id property="proNo" column="P_PRO_NO"/>
		<result property="proName" column="P_PRO_NAME"/>
		<result property="proPrice" column="P_PRO_PRICE"/>
		<result property="proDate" column="P_PRO_DATE"/>
		<result property="proModifyDate" column="P_PRO_MODIFY_DATE"/>
		<result property="proVol" column="P_PRO_VOL"/>
		<result property="proImg" column="P_PRO_IMG"/>
		<result property="proInfo" column="P_PRO_INFO"/>
		<result property="proStat" column="P_PRO_STAT"/>
		<result property="proCat" column="P_PRO_CAT"/>
		<result property="proSold" column="P_PRO_SOLD"/>
		<result property="proMfg" column="P_PRO_MFG"/>
		<result property="proRating" column="P_PRO_RATING"/>
		<collection property="option" javaType="arraylist" resultMap="ProductOptionResultMap"/>
	</resultMap>
	
	<resultMap type="Cart" id="CartListResultMap">
		<id property="memberNo" column="C_MEMBER_NO"/>
		<result property="proNo" column="C_PRO_NO"/>
		<result property="proName" column="P_PRO_NAME"/>
		<result property="proPrice" column="P_PRO_PRICE"/>
		<result property="proOpt" column="O_O_NAME"/>
		<result property="proOptNo" column="C_PRO_OPT"/>
		<result property="cartQty" column="C_CART_QTY"/>
		<result property="cartStat" column="C_CART_STAT"/>
		<result property="cartDate" column="C_CART_DATE"/>
		<result property="proStat" column="P_PRO_STAT"/>
	</resultMap>
	
	<resultMap type="ProductInquiry" id="ProductInqListResultMap">
		<id property="proNo" column="I_PRO_NO"/>
		<result property="memberNo" column="I_MEMBER_NO"/>
		<result property="memberId" column="M_ID"/>
		<result property="inqNo" column="I_INQ_NO"/>
		<result property="inqDate" column="I_INQ_DATE"/>
		<result property="inqModDate" column="I_INQ_MOD_DATE"/>
		<result property="inqTitle" column="I_INQ_TITLE"/>
		<result property="inqContent" column="I_INQ_CONTENT"/>
		<result property="inqStat" column="I_INQ_STAT"/>
	</resultMap>
	
	<resultMap type="OrderDetail" id="OrderDetailListResultMap">
		<id property="orderNo" column="ORDER_NO"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="detailProNo" column="DETAIL_PRO_NO"/>
		<result property="detailProName" column="DETAIL_PRO_NAME"/>
		<result property="detailOpt" column="DETAIL_OPT"/>
		<result property="detailOptName" column="DETAIL_OPT_NAME"/>
		<result property="detailQty" column="DETAIL_QTY"/>
		<result property="detailPrice" column="DETAIL_PRICE"/>
	</resultMap>
	
	<resultMap type="OrderSum" id="OrderSumResultMap">
		<id property="orderNo" column="ORDER_NO"/>
		<result property="memberNo" column="MEMBER_NO"/>
		<result property="orderPrice" column="ORDER_PRICE"/>
		<result property="orderStat" column="ORDER_STAT"/>
		<result property="orderDate" column="ORDER_DATE"/>
		<result property="orderMethod" column="ORDER_METHOD"/>
		<result property="orderPm" column="ORDER_PM"/>
		<result property="orderPoint" column="ORDER_POINT"/>
	</resultMap>

	<select id="getProductCount" parameterType="string" resultType="_int">
		SELECT COUNT(*) FROM PRODUCT
		<where>
			<if test="category == '식품'">
				AND PRO_CAT LIKE '1%'
			</if>
			<if test="category == '생활'">
				AND PRO_CAT LIKE '2%'
			</if>
			<if test="category == '뷰티'">
				AND PRO_CAT LIKE '3%'
			</if>
			<if test="category == '반려동물'">
				AND PRO_CAT LIKE '4%'
			</if>
			AND PRO_STAT = 3
		</where>
	</select>
	
	<select id="getProductCountByDetail" parameterType="list" resultType="_int">
		SELECT COUNT(*) 
		FROM PRODUCT P
		JOIN PRODUCT_CATEGORY C ON(P.PRO_CAT = C.C_NO)
		<where>
			<if test="detail != null and detail.size!=0">
				AND C.C_NAME IN
				<foreach collection="detail" item="filter" open="(" separator="," close=")">
					#{filter}
				</foreach>
			</if>
			AND P.PRO_STAT = 3
		</where>
	</select>
	
	<select id="getProductList" parameterType="string" resultMap="ProductListResultMap">
		<include refid="selectProductSql"/>
			, ROUND((SELECT TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')) FROM DUAL) - PRO_DATE) AS isNew
		FROM PRODUCT
		WHERE PRO_STAT = 3
		<if test="arrange == '신상품순'">
			ORDER BY PRO_DATE DESC
		</if>
		<if test="arrange == '판매순'">
			ORDER BY PRO_SOLD DESC
		</if>
		<if test="arrange == '별점순'">
			ORDER BY PRO_RATING DESC
		</if>
		<if test="arrange == '낮은가격순'">
			ORDER BY PRO_PRICE
		</if>
		<if test="arrange == '높은가격순'">
			ORDER BY PRO_PRICE DESC
		</if>		
	</select>
	
	<select id="getProductListByCategory" parameterType="map" resultMap="ProductListResultMap">
		<include refid="selectProductSql"/>
			, ROUND((SELECT TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')) FROM DUAL) - PRO_DATE) AS isNew
		FROM PRODUCT
		<where>
			<if test="category == '식품'">
				AND PRO_CAT LIKE '1%'
			</if>
			<if test="category == '생활'">
				AND PRO_CAT LIKE '2%'
			</if>
			<if test="category == '뷰티'">
				AND PRO_CAT LIKE '3%'
			</if>
			<if test="category == '반려동물'">
				AND PRO_CAT LIKE '4%'
			</if>
			<if test="category == '전체'">
			</if>
			AND PRO_STAT = 3
		</where>		
		<if test="arrange == null">
			ORDER BY PRO_DATE DESC		
		</if>
		<if test="arrange == '신상품순'">
			ORDER BY PRO_DATE DESC
		</if>
		<if test="arrange == '판매순'">
			ORDER BY PRO_SOLD DESC
		</if>
		<if test="arrange == '별점순'">
			ORDER BY PRO_RATING DESC
		</if>
		<if test="arrange == '낮은가격순'">
			ORDER BY PRO_PRICE
		</if>
		<if test="arrange == '높은가격순'">
			ORDER BY PRO_PRICE DESC
		</if>	
	</select>
	
	<select id="getProductListByDetail" parameterType="map" resultMap="ProductListResultMap">
		<include refid="selectProductSql"/>
			, ROUND((SELECT TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')) FROM DUAL) - PRO_DATE) AS isNew
		FROM PRODUCT P
		JOIN PRODUCT_CATEGORY C ON(P.PRO_CAT = C.C_NO)
		<where>
			<if test="detail != null and detail.size!=0">
				AND C.C_NAME IN
				<foreach collection="detail" item="filter" open="(" separator="," close=")">
					#{filter}
				</foreach>
			</if>
			AND P.PRO_STAT = 3
		</where>		
		<if test="arrange == null">
			ORDER BY PRO_DATE DESC		
		</if>
		<if test="arrange == '신상품순'">
			ORDER BY PRO_DATE DESC
		</if>
		<if test="arrange == '판매순'">
			ORDER BY PRO_SOLD DESC
		</if>
		<if test="arrange == '별점순'">
			ORDER BY PRO_RATING DESC
		</if>
		<if test="arrange == '낮은가격순'">
			ORDER BY PRO_PRICE
		</if>
		<if test="arrange == '높은가격순'">
			ORDER BY PRO_PRICE DESC
		</if>			
	</select>

	<select id="findProductOption" parameterType="_int" resultMap="ProductOptionResultMap">
		SELECT PRO_NO AS O_PRO_NO,
			   O_NO AS O_O_NO,
			   O_NAME AS O_O_NAME
		FROM PRODUCT_OPT
		WHERE PRO_NO = #{no}
	</select>

	<select id="findProductByNo" parameterType="_int" resultMap="ProductResultMap">
		SELECT P.PRO_NO AS P_PRO_NO,
		       P.PRO_NAME AS P_PRO_NAME,
		       P.PRO_PRICE AS P_PRO_PRICE, 
		       P.PRO_DATE AS P_PRO_DATE, 
		       P.PRO_MODIFY_DATE AS P_PRO_MODIFY_DATE, 
		       P.PRO_VOL AS P_PRO_VOL, 
		       P.PRO_IMG AS P_PRO_IMG, 
		       P.PRO_INFO AS P_PRO_INFO, 
		       P.PRO_STAT AS P_PRO_STAT,
		       P.PRO_CAT AS P_PRO_CAT, 
		       P.PRO_SOLD AS P_PRO_SOLD, 
		       P.PRO_MFG AS P_PRO_MFG, 
		       P.PRO_RATING AS P_PRO_RATING,
		       O.PRO_NO AS O_PRO_NO,
		       O.O_NO AS O_O_NO,
		       O.O_NAME AS O_O_NAME
		FROM PRODUCT P
		LEFT OUTER JOIN PRODUCT_OPT O ON(P.PRO_NO = O.PRO_NO)
		WHERE P.PRO_NO = #{no}
	</select>
	
	<insert id="addToCart" parameterType="Cart">
		INSERT INTO CART (
			MEMBER_NO, 
			PRO_NO, 
			PRO_OPT, 
			CART_QTY, 
			CART_STAT, 
			CART_DATE
		) VALUES (
			${memberNo},
			#{proNo},
			#{proOptNo},
			#{cartQty},
			'Y',
			DEFAULT
		)
	</insert>
	
	<delete id="deleteCart" parameterType="Cart">
		DELETE FROM CART
		WHERE 
			PRO_NO = #{proNo}
			AND PRO_OPT = #{proOptNo} 
			AND MEMBER_NO = #{memberNo}
	</delete>
	
	<select id="getCartList" parameterType="_int" resultMap="CartListResultMap">
		SELECT DISTINCT C.MEMBER_NO AS C_MEMBER_NO,
		       C.PRO_NO AS C_PRO_NO,
		       P.PRO_NAME AS P_PRO_NAME,
		       P.PRO_PRICE AS P_PRO_PRICE,
		       C.PRO_OPT AS C_PRO_OPT,
		       O.O_NAME AS O_O_NAME,
		       C.CART_QTY AS C_CART_QTY,
		       C.CART_STAT AS C_CART_STAT,
		       P.PRO_STAT AS P_PRO_STAT,
		       C.CART_DATE AS C_CART_DATE
		FROM CART C
		JOIN PRODUCT P ON(C.PRO_NO = P.PRO_NO)
		JOIN PRODUCT_OPT O ON(C.PRO_OPT = O.O_NO)
		WHERE 
			C.MEMBER_NO = #{no}
		    AND C.CART_STAT = 'Y'
		    AND P.PRO_STAT = 3
	</select>
	
	<select id="getProductNameByNo" parameterType="_int" resultType="string">
		SELECT PRO_NAME
		FROM PRODUCT 
		WHERE PRO_NO = #{no}
	</select>
	
	<insert id="addToWish" parameterType="Wish">
		INSERT INTO WISH (
		    PRO_NO,
		    WISH_STAT,
		    MEMBER_NO,
		    WISH_DATE
		)
		VALUES (
		    #{proNo},
		    'Y',
		    #{memberNo},
		    DEFAULT
		)
	</insert>
	
	<select id="getWish" parameterType="Wish" resultType="_int">
		SELECT COUNT(*)
		FROM WISH
		WHERE MEMBER_NO = #{memberNo}
			  AND PRO_NO = #{proNo}
	</select>
	
	<select id="getWishStat" parameterType="Wish" resultType="string">
		SELECT WISH_STAT
		FROM WISH
		WHERE MEMBER_NO = #{memberNo}
			  AND PRO_NO = #{proNo}
	</select>
	
	<update id="updateWish" parameterType="Wish">
		UPDATE WISH
		SET WISH_STAT = #{wishStat}
		WHERE MEMBER_NO = #{memberNo}
			  AND PRO_NO = #{proNo}		
	</update>
	
	<select id="getWishList" parameterType="_int" resultMap="ProductListResultMap">
		SELECT W.PRO_NO,
		       P.PRO_NAME,
		       P.PRO_PRICE,
		       P.PRO_RATING
		FROM WISH W
		JOIN PRODUCT P ON(W.PRO_NO = P.PRO_NO)
		WHERE WISH_STAT = 'Y' AND MEMBER_NO = #{no}
	</select>
	
	<select id="getWishCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM WISH
		WHERE MEMBER_NO = #{no}
			  AND WISH_STAT = 'Y'
	</select>
	
	<insert id="writeQna" parameterType="ProductInquiry">
		INSERT INTO PRODUCT_INQUIRY(
			PRO_NO, 
			MEMBER_NO, 
			INQ_NO, 
			INQ_DATE, 
			INQ_MOD_DATE, 
			INQ_TITLE, 
			INQ_CONTENT, 
			INQ_STAT
		)
		VALUES (
			#{proNo}, 
			#{memberNo}, 
			SEQ_INQNO.NEXTVAL, 
			DEFAULT, 
			DEFAULT, 
			#{inqTitle}, 
			#{inqContent}, 
			'N'
		)
	</insert>
	
	<select id="getProductInqCount" parameterType="_int" resultType="_int">
		SELECT COUNT(*)
		FROM PRODUCT_INQUIRY
		WHERE PRO_NO = #{no}
	</select>
	
	<select id="getProductInqList" parameterType="_int" resultMap="ProductInqListResultMap">
		SELECT I.PRO_NO AS I_PRO_NO, 
			I.MEMBER_NO AS I_MEMBER_NO, 
			M.ID AS M_ID, 
			I.INQ_NO AS I_INQ_NO, 
			I.INQ_DATE AS I_INQ_DATE, 
			I.INQ_MOD_DATE AS I_INQ_MOD_DATE, 
			I.INQ_TITLE AS I_INQ_TITLE, 
			I.INQ_CONTENT AS I_INQ_CONTENT, 
			I.INQ_STAT AS I_INQ_STAT
		FROM PRODUCT_INQUIRY I
		JOIN MEMBER M ON(I.MEMBER_NO = M.NO)
		WHERE PRO_NO = #{no}
	</select>
	
	<insert id="createOrderSum" parameterType="OrderSum">
		<selectKey keyProperty="orderNo" resultType="_int" order="BEFORE">
			SELECT SEQ_ORDERNO.NEXTVAL FROM DUAL
		</selectKey>		
		INSERT INTO ORDER_SUM (
		    ORDER_NO,
		    MEMBER_NO
		)
		VALUES (
		    #{orderNo},
		    #{memberNo}
		)		
	</insert>
	
	<insert id="addOrderDetail" parameterType="OrderDetail">
		INSERT INTO ORDER_DETAIL(
		    ORDER_NO,
		    MEMBER_NO,
		    DETAIL_PRO_NO,
		    DETAIL_PRO_NAME,
		    DETAIL_OPT,
		    DETAIL_OPT_NAME,
		    DETAIL_QTY,
		    DETAIL_PRICE
		)
		VALUES (
		    #{orderNo},
		    #{memberNo},
		    #{detailProNo},
		    #{detailProName},
		    #{detailOpt},
		    #{detailOptName},
		    #{detailQty},
		    #{detailPrice}
		)
	</insert>
	
	<update id="updateOrderSum" parameterType="OrderSum">
		UPDATE ORDER_SUM
		SET ORDER_PRICE = #{orderPrice}
		WHERE ORDER_NO = #{orderNo}
	</update>

	<select id="getOrderDetailList" parameterType="_int" resultMap="OrderDetailListResultMap">
		SELECT ORDER_NO, 
			   MEMBER_NO, 
			   DETAIL_PRO_NO, 
			   DETAIL_PRO_NAME,
			   DETAIL_OPT, 
			   DETAIL_QTY, 
			   DETAIL_PRICE, 
			   DETAIL_OPT_NAME
		FROM ORDER_DETAIL
		WHERE ORDER_NO = #{orderNo}
	</select>
	
	<select id="findOrderSumByNo" parameterType="_int" resultMap="OrderSumResultMap">
		SELECT ORDER_NO, 
			   MEMBER_NO, 
			   ORDER_PRICE, 
			   ORDER_STAT, 
			   ORDER_DATE, 
			   ORDER_METHOD, 
			   ORDER_PM, 
			   ORDER_POINT
		FROM ORDER_SUM 
		WHERE ORDER_NO = #{no}
	</select>
	
	<update id="completeOrderSum" parameterType="OrderSum">
		UPDATE ORDER_SUM
		SET ORDER_PRICE = #{orderPrice},
		    ORDER_POINT = #{orderPoint},
		    ORDER_STAT = #{orderStat},
		    ORDER_METHOD = #{orderMethod}
		WHERE ORDER_NO = #{orderNo}
	</update>
	
	<delete id="deleteOrderSum" parameterType="_int">
		DELETE FROM ORDER_SUM
		WHERE 
		    MEMBER_NO = 3
		    AND ORDER_STAT = '주문생성'
	</delete>
	
	<insert id="addDelivery" parameterType="Delivery">
		INSERT INTO DELIVERY (
			ORDER_NO,
			MEMBER_NO,
			DEL_STAT,
			DEL_NAME,
			DEL_POSTCODE,
			DEL_ADD,
			DEL_EXTRA_ADD,
			DEL_DETAIL_ADD,
			DEL_PHONE,
			DEL_MSG
		) 
		VALUES (
			#{orderNo},
			#{memberNo},
			DEFAULT,
			#{delName},
			#{delPostcode},
			#{delAdd},
			#{delExtraAdd},
			#{delDetailAdd},
			#{delPhone},
			#{delMsg}
		)
	</insert>
</mapper>